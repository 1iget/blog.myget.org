---
layout: post
title: "MyGet Year in Review 2013"
date: 2014-01-14 11:00:00 +0100
comments: true
published: true
categories: ["post"]
tags: ["Stories"]
alias: ["/post/2014/01/14/myget-year-in-review-2013.aspx"]
author: "Maarten Balliauw"
redirect_from:
 - /post/2014/01/14/myget-year-in-review-2013.aspx.html
 - /post/2014/01/14/myget-year-in-review-2013.aspx.html
---

<p>2013 was a good year. We had tons of fun developing <a href="https://www.myget.org" target="_blank">MyGet</a> and judging from the feedback we get from you we can tell you are having fun with MyGet as well. And that is awesome! Thank you so much for sharing your feedback and your continued support!</p><p>Speaking of feedback: what do you think our 2014 roadmap should look like? Let us know through <a href="http://www.instant.ly/s/ToCKn">this survey</a>!</p><p>Looking back at 2013 also involves some numbers, so here goes:</p><ul><li><strong>Average response time</strong> went from 3 081 ms back in January to <strong>538 ms</strong> in December. That's almost a factor 6 improvement! Now let's scale those improvements to various other components of MyGet.</li><li><strong>Average uptime in 2013 was 99.83%</strong>. We had 6 out of 12 months with 100% uptime. That's not too bad knowing that we combine various components with a 99.99% service availability each. Full history can be found on our <a href="http://status.myget.org/519401" target="_blank">status page</a>.</li><li>Despite a 5min glitch on October 10, we have to go back to September 12 to find our last service issue caused by a circular package dependency, which in turn&nbsp;caused&nbsp;our package retention rules engine to choke on it. Measures have been taken to prevent this from happening on MyGet and <a href="/post/2013/09/12/Downtime-September-11-and-12-2013-Root-cause.aspx" target="_blank">a full root cause analysis is available</a> on our blog.</li><li>We are now hosting <strong>2394 feeds</strong> (excluding the Enterprise plan feeds), good for<strong> 85.000 unique packages</strong> and 40 GB of storage (plus 3 months worth of backups, that's 600 GB in total). Bandwidth is currently just below 1 TB a month.</li><li>Build services has ran <strong>4.800 builds</strong> this year, and we're seeing quite some growth there over the last months.</li></ul><p>Even though we deploy continuously, we tagged the following releases in 2013:<ul><li><a href="http://docs.myget.org/docs/release-notes/myget-1.5" target="_blank">MyGet 1.5</a> (January 5th):&nbsp;new profile page, activity streams, feed cloning, package retention policies, CodePlex and BitBucket integration in MyGet Build Services.</li><li><a href="http://docs.myget.org/docs/release-notes/myget-1.6" target="_blank">MyGet 1.6</a> (February 25th): feed setting for SemVer validation, download feed as ZIP, package sources out-of-beta, lots of improvements to build services (versioning, SDKs and tools, logs, ...)</li><li><a href="http://docs.myget.org/docs/release-notes/myget-1.7" target="_blank">MyGet 1.7</a> (May 17th): new <a href="http://docs.myget.org/" target="_blank"><strong>documentation site</strong></a>, search and filtering enhancements, NuGet 2.5 compatibility, <a href="http://psd.myget.org/" target="_blank">Package Source Discovery</a>, auto-publish symbols feed-setting, build service enhancements (assemblyinfo-patching, links to produced packages, support for build.ps1/.cmd/.bat, build parameters)</li><li><a href="http://docs.myget.org/docs/release-notes/myget-1.8" target="_blank">MyGet 1.8</a> (September 10th): NuGet 2.7 compatibility (<a href="http://docs.myget.org/docs/reference/build-services#Package_Restore" target="_blank">new package restore</a>!), auto-update metadata from upstream packages, package pinning, source labeling when pushing packages upstream, automatic package mirroring for feed-proxies, build services enhancements (<a href="http://docs.myget.org/docs/reference/build-services#Source_labeling_(tagging)" target="_blank">build labeling compatible with GitHub releases</a>, support for MyGet.ps1/.cmd/.bat).</li><li>And the obvious bug fixes (and occasionally new bugs)&nbsp;along the way...</li></ul><p>We also shipped our second book: <a href="http://amzn.to/pronuget2" target="_blank">Pro NuGet, 2nd Edition</a> (October 7th), packed with tons of <a href="http://blog.maartenballiauw.be/" target="_blank">new stuff</a> and a dedicated chapter of recipes. Thanks again to Apress and the NuGet team for the high-quality reviews and helping us ship what is probably the most complete NuGet guide out there.</p><p>Let's make 2014 another great year for MyGet, NuGet and dependency management in general!</p><p><em>Happy New Year! And happy packaging!</em></p><p>PS: Let us know your feedback on what&nbsp;you want from MyGet in 2014&nbsp;through <a href="http://www.instant.ly/s/ToCKn">this survey</a>!</p>

