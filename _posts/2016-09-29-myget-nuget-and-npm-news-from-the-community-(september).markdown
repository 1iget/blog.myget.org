---
layout: post
title: "MyGet's NuGet and NPM news from the community (September 2016)"
date: 2016-09-29 07:59:00 +0200
comments: true
published: true
categories: ["post"]
tags: ["Community news", "Development", "Npm", "NuGet", "Stories"]
alias: ["/post/2016/09/29/MyGet-NuGet-and-NPM-news-from-the-community-(September).aspx", "/post/2016/09/29/myget-nuget-and-npm-news-from-the-community-(september).aspx"]
author: "Maarten Balliauw"
redirect_from:
 - /post/2016/09/29/MyGet-NuGet-and-NPM-news-from-the-community-(September).aspx.html
 - /post/2016/09/29/myget-nuget-and-npm-news-from-the-community-(september).aspx.html
---

<p>We tried it <a href="/post/2016/08/25/MyGets-NuGet-and-NPM-news-from-the-community.aspx">last month</a>, and feedback was good. That’s why we have a second edition of our NuGet and NPM community news from the past few weeks. In this post, we bring you some interesting blog posts and articles, curated by our MyGet founders <a href="http://www.twitter.com/xavierdecoster">Xavier</a> and <a href="http://www.twitter.com/maartenballiauw">Maarten</a>. Follow <a href="http://www.twitter.com/MyGetTeam">@MyGetTeam on Twitter</a> for more!</p> <h2>NuGet news</h2> <p><a href="http://www.myget.org/nuget"><img width="195" height="194" title="NuGet news, curated by MyGet" align="right" style="border-width: 0px; margin: 0px 0px 0px 10px; padding-top: 0px; padding-right: 0px; padding-left: 0px; float: right; display: inline; background-image: none;" alt="NuGet news, curated by MyGet" src="/images/image_150.png" border="0"></a>The NuGet team <a href="http://blog.nuget.org/20160920/NuGet-Docs-GoLive.html">released a new documentation site</a>, with new quick-start tutorials and end-to-end scenarios. A nice improvement from the old docs, check it out!</p> <p>The folks at Cake <a href="http://cakebuild.net/blog/2016/08/how-does-cake-use-myget">started a blog series</a> on which services they are using and for what purpose. We're honored that their first post is titled "How does Cake use MyGet?".</p> <p>Nick Randolph blogged "<a href="http://nicksnettravels.builttoroam.com/post/2016/09/11/NetStandard-what-is-it-and-why-do-I-care.aspx">NetStandard, what is it and why do I care?"</a> - a nice and easy digestible post linking to Oren Novotny's more elaborate <a href="https://oren.codes/2016/06/23/portable-is-dead-long-live-netstandard/">Portable- is dead, long live NetStandard</a>.</p> <p>Cori Drew mentioned <a href="https://twitter.com/i/web/status/778607942253719552">searching for "nuget kitten dies puppy"</a>. Still using msbuild package restore? That is a great search indeed! If you haven’t done yet, learn about <a href="http://blog.davidebbo.com/2014/01/the-right-way-to-restore-nuget-packages.html">switching to proper NuGet package restore</a>.</p> <p>Using Azure Automation? Tao Yang wrote a blog post demonstrating how to <a href="http://blog.tyang.org/2016/09/18/scripting-azure-automation-module-imports-directly-from-myget-or-powershell-gallery">Script Azure Automation Module Imports Directly from MyGet or PowerShell Gallery</a>, re-using components in automation workflows.</p> <p>The <a href="http://rehansaeed.com/the-dotnet-watch-tool/">Dotnet Watch Tool</a> is covered in a blog post by Muhammad Rehan Saeed. He demonstrates using it to shorten the feedback loop while developing, by automatically loading changed source files without having to rebuild the entire project.</p> <p>David Fowler is experimenting with "channels" (or "zero copy streams"), making the good old Stream object in .NET obsolete. He released a <a href="https://github.com/davidfowl/Channels/blob/master/README.md#myget-feed">preview feed on MyGet</a>, where you can experiment with Channels. David <a href="https://github.com/davidfowl/Channels/tree/master/samples/Channels.Samples">posted some samples</a> as well.</p> <p>Sitecore CMS now supports <a href="https://doc.sitecore.net/sitecore_experience_platform/82/developing/developing_with_sitecore/sitecore_public_nuget_packages_faq">NuGet for distributing Sitecore packages</a>. They wrote an extensive FAQ on how to work with their feeds and how to install packages into your web application. And even nicer: they are hosted on MyGet. Thanks guys!</p> <p>The new Windows Management Framework (WMF) 5.1 added <a href="https://github.com/OneGet/oneget/issues/1#issuecomment-239949911">OneGet support for basic authentication against secured package feeds</a>, as well as proxy support. That's pretty neat, as you can now distribute custom PowerShell modules using private feeds.</p> <h2>NPM news</h2> <p><a href="http://www.myget.org/npm"><img width="195" height="195" title="NPM news, curated by MyGet" align="right" style="border-width: 0px; margin: 0px 0px 0px 10px; padding-top: 0px; padding-right: 0px; padding-left: 0px; float: right; display: inline; background-image: none;" alt="NPM news, curated by MyGet" src="/images/image_151.png" border="0"></a>Npm <a href="https://github.com/npm/npm/releases/tag/v2.15.11">2.15.11</a> and <a href="https://github.com/npm/npm/releases/tag/v3.10.8">3.10.8</a> have been released. The version 2 branch does not seem to have any noteworthy changes apart from some dependency updates. The version 3 branch got some updates to npm shrinkwrap, and some bugfixes.</p> <p><a href="https://blogs.msdn.microsoft.com/typescript/2016/09/22/announcing-typescript-2-0/">TypeScript 2.0</a> was released with <a href="https://github.com/Microsoft/TypeScript/wiki/What%27s-new-in-TypeScript">new features</a> like additional types, optional parameters, expression operators, ... We quite like the way TypeScript makes JavaScript more type safe, and the language itself is close to the language we use to build MyGet, C#.</p> <p>Tierney Coren wrote <a href="https://nodesource.com/blog/eleven-npm-tricks-that-will-knock-your-wombat-socks-off/">11 Simple npm Tricks That Will Knock Your Wombat Socks Off</a>. In this post, he demonstrates some of the lesser used but really helpful commands npm offers, like opening a package's GitHub repo in the browser. Or automating _npm init_ with useful defaults. And 9 more of those!</p> <p>Ashley G. Williams has presented <a href="http://ashleygwilliams.github.io/a-brief-history">A Brief History</a>, a great presentation on modular design. What goes into a module? How do you decide? Tip: it's not about what goes in modules, it's how we compose them all together.</p> <p>Interested in Streams and Async / Await in Nodejs? Paul Cowan uses Babel to <a href="http://www.thesoftwaresimpleton.com/blog/2016/09/10/async-await/">transpile asynchronous, non-blocking code into JavaScript</a> using the async and await keywords that are transpiled into promises.</p> <p>“This” is not always “this”. Peleke Sengstacke wrote about how scope works in JavaScript in his <a href="https://code.tutsplus.com/tutorials/grokking-scope-in-javascript--cms-26259">Grokking Scope in JavaScript</a>.</p> <p>Tim Severien wrote a tutorial on <a href="https://www.sitepoint.com/up-and-running-with-eslint-the-pluggable-javascript-linter/">using ESLint to monitor code quality and detect common code issues</a>, resulting in higher quality code. A nice, thorough explanation on how to set up ESLint and use it.</p> <p>Let’s see if we can do this type of post next month as well. If you have any news to share or have other feedback, let us know using the comments below or <a href="http://www.twitter.com/MyGetTeam">reach out on Twitter</a>.</p> <p><em>Happy packaging!</em></p>
{% include imported_disclaimer.html %}
