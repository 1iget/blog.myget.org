---
layout: post
title: "MyGet's NuGet and NPM news from the community (February 2017)"
date: 2017-02-27 09:46:00 +0100
comments: true
published: true
categories: ["post"]
tags: ["Community news", "Development", "Npm", "NuGet"]
alias: ["/post/2017/02/27/myget-s-nuget-and-npm-news-from-the-community-february-2017.aspx"]
author: "Xavier Decoster"
redirect_from:
 - /post/2017/02/27/myget-s-nuget-and-npm-news-from-the-community-february-2017.aspx.html
 - /post/2017/02/27/myget-s-nuget-and-npm-news-from-the-community-february-2017.aspx.html
---

<p>Here we are again with a new episode of&nbsp;<a href="/category/Community-news.aspx" target="_blank">MyGet's NuGet and NPM news from the community</a>! We will look at some interesting blog posts and articles found on the Internet, curated by our MyGet founders&nbsp;<a href="http://www.twitter.com/xavierdecoster">Xavier</a>&nbsp;and&nbsp;<a href="http://www.twitter.com/maartenballiauw">Maarten</a>. Follow&nbsp;<a href="http://www.twitter.com/MyGetTeam">@MyGetTeam on Twitter</a>&nbsp;for more!</p><h2>NuGet news</h2><p><a href="http://www.myget.org/nuget"><img width="195" height="194" src="/images/image_150.png" style="float: right;"></a>The .NET team <a href="https://blogs.msdn.microsoft.com/dotnet/2017/01/30/announcing-net-core-net-native-and-nuget-updates-in-vs-2017-rc/">announced .NET Core, .NET Native and NuGet Updates in VS 2017 RC</a>. Quite a few changes, most notably the improvements in NuGet to use the new <code>.csproj</code>&nbsp; format and package references therein. And early in February, <a href="https://blogs.msdn.microsoft.com/dotnet/2017/02/07/announcing-net-core-tools-updates-in-vs-2017-rc/">NuGet 4.0 RC</a> was released as well.</p><p>More news from Redmond: <a href="http://blog.nuget.org/20170202/introducing-scoped-api-keys.html">NuGet.org now also supports scoped API keys</a>, just like we do. Where on MyGet scope is per feed, NuGet came up with a per-package model. Do check it out!</p><p>Will this be the new way of distributing project templates? As NuGet packages? Muhammad Rehan Saeed found a new element that can be used in a <code>.nuspec</code>&nbsp; and demonstrates <a href="http://rehansaeed.com/custom-project-templates-using-dotnet-new/">Custom Project Templates Using dotnet new</a>.</p><p>Andrey Akinshin, a developer on <a href="http://www.jetbrains.com/rider">JetBrains' Rider</a> cross-platform .NET IDE wrote an in-depth article on how they are <a href="http://aakinshin.net/en/blog/dotnet/rider-nuget-search/">making the Rider NuGet client fast</a>.</p><p>Puneet Ghanshani <a href="https://blogs.msdn.microsoft.com/modernarchitecturedevops/2017/01/20/nuget-packages-inventory-across-multiple-solutions/">describes a way of creating an inventory of packages a solution uses</a> by working with the <code>NuGet.Core</code>&nbsp; package. Would be great to see something like this as a Visual Studio extension!</p><p>Scott Addie wrote a great article, <a href="http://developer.telerik.com/topics/net/migration-asp-net-core-considerations-strategies/">Migration to ASP.NET Core</a>, where he walks through the various considerations and strategies of migrating a .NET codebase to .NET Core. The article covers the various frameworks, targets, the portability analyzer, and more!</p><p>Just started looking at the<code>dotnet</code>&nbsp;command line tool? Steve Smith <a href="http://ardalis.com/how-to-add-a-nuget-package-using-dotnet-add">explains how to add a Nuget Package Using dotnet add</a>.</p><p>Managing the life cycle of PowerShell module assets in your Azure Automation accounts can be challenging. Not anymore! Tao Yang <a href="http://blog.tyang.org/2017/02/17/managing-azure-automation-module-assets-using-myget">explains how you can leverage MyGet to its full extent to make this tedious task a breeze</a> and take full control of your very own PowerShell Gallery, on MyGet.</p><h2>NPM news</h2><p><a href="http://www.myget.org/npm"><img width="195" height="195" src="/images/image_151.png" style="float: right;"></a>A fresh <a href="https://github.com/npm/npm/releases/tag/v4.2.0">npm@4.2.0</a> landed, featuring improved search - faster and more relevant. Debug logs are now saved in the <code>_cache</code>&nbsp; folder, making it easier to clean them up.</p><p>Node.js itself also dropped a new version - <a href="https://nodejs.org/en/blog/release/v7.5.0/">v7.5.0</a>. Ehm no, <a href="https://nodejs.org/en/blog/release/v7.6.0/">v7.6.0</a>. Noteworthy changes are an update of openssl (1.0.2k), the ability to use system CA's (yes!) and a number of bugfixes.</p><p><a href="https://harksys.com/labs/npm-vet-a-simple-cli-tool-for-checking-npm-package-versions/">NPM Vet</a> is a new tool that allows us to to quickly visualise the difference between versions defined in our <code>package.json</code>&nbsp; and versions installed in the <code>node_modules</code>&nbsp; folder. In other words: it helps us check for dependency mismatches.</p><p><em>Happy packaging!</em></p>

