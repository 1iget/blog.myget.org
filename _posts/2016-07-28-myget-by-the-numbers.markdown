---
layout: post
title: "MyGet by the numbers"
date: 2016-07-28 05:44:00 +0200
comments: true
published: true
categories: ["post"]
tags: ["Development", "Stories"]
alias: ["/post/2016/07/28/MyGet-by-the-numbers.aspx", "/post/2016/07/28/myget-by-the-numbers.aspx"]
author: "Xavier Decoster"
redirect_from:
 - /post/2016/07/28/MyGet-by-the-numbers.aspx.html
 - /post/2016/07/28/myget-by-the-numbers.aspx.html
---

<p>As it is a slower time of year and many people are taking some vacation, we decided it would be a nice time to collect some numbers around MyGet. Of course we can’t share all of our statistics, but it’s always fun to look at them. MyGet has a shared tenant, <a href="http://www.myget.org">www.myget.org</a>, hosting and serving NuGet, npm, Bower and VSIX packages. And debugger symbols, of course. This shared tenant will be the focus of this post. Our <a href="http://www.myget.org/enterprise">MyGet Enterprise plans</a>, which run on their own dedicated tenant infrastructure, are not included in these statistics.</p> <h2></h2> <h2>Number of machines</h2> <p>Our web application is hosted on <a href="http://www.azure.com">Microsoft Azure</a> across three different regions. The shared tenant has its primary location in the West Europe region, and a secondary in US East. Both locations run 3 front-end web server machines and 2 back-end machines for handling anything that doesn’t have to happen real-time. These machines are all general purpose “A3” machines. We have a tertiary deployment in US West for some Enterprise customers, where a similar deployment lives.</p> <p>Since we use auto-scaling based on time of day, we don’t have the same amount of machines throughout the day. On average, we run 10 machines for our front-end.</p> <p>Another deployment lives in a private datacenter and hosts part of our build services. We also run our CI systems in this private datacenter. Azure is great, but also super expensive for some workloads. Hosting this workload ourselves reduces the operational cost for build services with a factor 6. This infrastructure is all SSD based, and we’re getting loads more horsepower out of the VM’s running here. To give an example: the Visual Studio 2015 Update 3 install ran for 4 hours on our Azure build agents, the private VM’s did the update in half an hour.</p> <h2>Number of packages and downloads</h2> <p>Our shared tenant currently hosts <strong>over 1 million unique packages</strong>. These packages have been downloaded 17,305,790,397 times so far. Yes, that’s <strong>over 17 billion</strong>. We handle roughly <strong>400 million downloads each month</strong>. Some of our Enterprise customers are pushing similar numbers on their instances.</p> <p>If we look at package types, roughly 50% of packages are NuGet and symbols packages, including Chocolatey and Octopus Deploy. 30% of packages are npm, with Bower and VSIX following at around 10% each.</p> <h2>Storage, traffic and bandwidth</h2> <p>Right now, our shared MyGet tenant consumes <strong>3.2 TB of storage</strong> for just packages and metadata, including backups in secondary Azure regions.</p> <p>Each month, users of <a href="http://www.myget.org">www.myget.org</a> <strong>push 2.4 TB of data into our system</strong>. Many feeds contain CI packages and retain only the latest 100 nightly builds. Other feeds contain 100 MB of Octopus Deploy artifacts, being updated daily. On the consumption side, we have <strong>8 TB of traffic being consumed each month</strong>, spread across our Azure bill and the Switzerland-based <a href="https://www.keycdn.com/?a=11798">KeyCDN</a>.</p> <p>We used to run off the Azure CDN, but found that <a href="https://www.keycdn.com/?a=11798">KeyCDN</a> has been more reliable at half the price. We still have the Azure CDN configured so we can fail-over in case it’s needed. So far, this hasn’t been required. Swiss efficiency #ftw!</p> <h2></h2> <h2>Builds</h2> <p>When we first introduced <a href="http://docs.myget.org/docs/reference/build-services">build services</a>, we envisioned making building NuGet (and later npm) packages as easy as possible. We have a number of open source projects running their builds on MyGet, as well as a number of companies enjoying the convention-based builds.</p> <p>MyGet Build Services has produced <strong>over 65,000 successful builds</strong> (producing packages) so far. On average, these builds take 2 minutes to complete, with some people maxing out the 30 minute build time we allow.</p> <h2></h2> <h2>Support requests</h2> <p>Ask any MyGet user and they will confirm we offer an excellent and speedy support. We typically manage to respond within the hour, unless we’re asleep. Which happens for a good 7 hours each day when night falls over the CET time zone. Our fastest response&nbsp; so far providing a solution to the customer was 38 seconds.</p> <p>We handle a good 45 support cases each day. Some of those are simple: we can often respond with a link to documentation. Others are more complicated and challenging. And if we can, we submit a PR to your project to resolve any code or configuration issues.</p> <p>The busiest day of the week? Thursday. By far. It seems that is the day where everybody realizes the week is over halfway and things must be shipped. Unexpected to us, holidays are also quite busy. It seems many developers sneak in a few hours of coding time on those days and often want us to be part of that.</p> <p>If we look at technologies, 80% of questions or client configuration problems are related to NuGet. 9% of requests are related to npm. And less than 1% for Bower and VSIX. What with the other 10%? These are typically orientation questions to see if MyGet is a good fit, or if MyGet fits in the customer’s architecture or development practice.</p> <p>When we started this adventure, we never thought these numbers would become true. Thanks for making this happen and being a big part of this!</p> <p><em>Happy packaging!</em></p>
{% include imported_disclaimer.html %}
