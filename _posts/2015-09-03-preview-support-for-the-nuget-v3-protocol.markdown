---
layout: post
title: "Preview support for the NuGet V3 protocol"
date: 2015-09-03 06:40:00 +0200
comments: true
published: true
categories: ["post"]
tags: ["Development", "Feature", "NuGet"]
alias: ["/post/2015/09/03/Preview-support-for-the-NuGet-V3-protocol.aspx", "/post/2015/09/03/preview-support-for-the-nuget-v3-protocol.aspx"]
author: "Maarten Balliauw"
redirect_from:
 - /post/2015/09/03/Preview-support-for-the-NuGet-V3-protocol.aspx.html
 - /post/2015/09/03/preview-support-for-the-nuget-v3-protocol.aspx.html
---

<p>A few weeks back, <a href="blog.nuget.org/20150720/nuget-3.0.0.html">NuGet 3.0 was released</a>. It’s a redesign of the NuGet client targeted at Visual Studio 2015, with a number of improvements and changes from earlier versions of NuGet. One of the changes the NuGet team made was on the server side, with a new protocol. We’re happy to announce that MyGet now has preview support for this new protocol as well!</p> <p>The new NuGet server-side API was <a href="http://blog.nuget.org/20140424/building-nuget-3.x.html">first written about</a> in April 2014. And even before that, there was a talk <a href="http://vimeo.com/78045959"><em>Evolution of NuGet</em></a> at MonkeySpace 2013. In it, the NuGet team describes what the NuGet team envisioned: a faster and more reliable API for .NET developers to consume packages. When opening the NuGet Package Manager Dialog in Visual Studio 2015 this becomes very visible: the well-known OData V2 feeds feel slow. MyGet now supports the NuGet V3 protocol (in preview), sharing the vision the NuGet team laid out over 2 years ago and made happen a few weeks ago: make NuGet package management faster.</p><p><i><b>Note: make sure to read the entire blog post when using private feeds - the NuGet client that ships with Visual Studio 2015 NuGet only supports pre-authenticated V3 feeds. An <a href="http://docs.nuget.org/release-notes/nuget-3.2-rc" target="_blank">update is available</a> with full private feed support.</b></i></p> <h2>How to make use of the NuGet V3 protocol with MyGet?</h2> <p>The URL of a MyGet feed typically looks like this: <a href="https://www.myget.org/F/feedname/api/v2">https://www.myget.org/F/feedname/api/v2</a>. For the V3 protocol, this URL becomes <a href="https://www.myget.org/F/feedname/api/v3/index.json">https://www.myget.org/F/feedname/api/v3/index.json</a>. This feed can be registered in Visual Studio 2015. From the <strong><em>Tools | NuGet Package Manager | Package Manager Settings </em></strong>menu, we can select the <strong><em>Package Sources</em></strong> tab and add a V3 feed in the same way as a V2 feed can be added. We can give the feed a descriptive name, and enter its URL.</p> <p><a href="/images/image_125.png"><img width="640" height="432" title="Registering MyGet V3 API NuGet" style="border-top: 0px; border-right: 0px; background-image: none; border-bottom: 0px; padding-top: 0px; padding-left: 0px; border-left: 0px; display: inline; padding-right: 0px" alt="Registering MyGet V3 API NuGet" src="/images/image_thumb_123.png" border="0"></a></p> <p>Once added, we can manage packages for our project or solution, and select the newly added feed from the dropdown. </p> <p><a href="/images/image_126.png"><img width="640" height="456" title="MyGet feed with NuGet V3 API protocol" style="border-top: 0px; border-right: 0px; background-image: none; border-bottom: 0px; padding-top: 0px; padding-left: 0px; border-left: 0px; display: inline; padding-right: 0px" alt="MyGet feed with NuGet V3 API protocol" src="/images/image_thumb_124.png" border="0"></a></p> <h2>Does this also work with private (authenticated) feeds?</h2> <p>It’s perfectly possible to consume private (authenticated) feeds on MyGet using the new NuGet client in Visual Studio 2015. Unfortunately <a href="https://github.com/NuGet/Home/issues/1216">there is a bug</a> in the client that makes this a little hard: if it has to prompt for credentials, consuming the feed will fail.&nbsp;The NuGet team confirmed a fix is ready to be released (in fact, an <a href="http://docs.nuget.org/release-notes/nuget-3.2-rc" target="_blank">RC version is out</a>), but in the meanwhile&nbsp;a pre-authenticated feed URL can be used to consume a private V3 feed.</p><p>A pre-authenticated feed comes in the following format: <a href="https://www.myget.org/F/feedname/auth/accesstoken/api/v3/index.json">https://www.myget.org/F/feedname/auth/accesstoken/api/v3/index.json</a>, where the <em>feedname</em> is of course the name of the feed, and <em>accesstoken </em>is one of the access tokens that can be <a href="https://www.myget.org/profile/Me#!/AccessTokens">managed via the MyGet website</a>.</p> <h2>Can upstream feeds be proxied?</h2> <p>The MyGet V3 feeds support proxying upstream V2 feeds (not V3 yet). This allows for registering one V3&nbsp;feed URL in Visual Studio while proxying one or more external (V2)&nbsp;feeds over the same URL. This greatly speeds up working with NuGet! Have a look at <a href="docs.myget.org/docs/how-to/make-myget-list-and-automatically-mirror-packages-from-other-feeds">our documentation</a> to learn more about feed proxying.</p> <p>When browsing MyGet, you may notice the V3 feed URL is not being advertised anywhere. The reason for that is twofold: we’re offering the V3 protocol as a<em> </em>preview. We want to make sure the feed behaves the way it should. Second, we want to continue improving V3 protocol support, for example by enhancing <a href="docs.myget.org/docs/how-to/make-myget-list-and-automatically-mirror-packages-from-other-feeds">support for proxying upstream</a> feeds with upstream V3 sources.</p> <p>We would love to hear your feedback via <a href="http://twitter.com/MyGetTeam" target="_blank"><u><font color="#0066cc">@MyGetTeam</font></u></a>&nbsp;or through the comments below.</p> <p><em>Happy packaging!</em></p>

