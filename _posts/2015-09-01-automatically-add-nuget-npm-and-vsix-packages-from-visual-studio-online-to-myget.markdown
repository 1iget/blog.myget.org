---
layout: post
title: "Automatically add NuGet, npm and Vsix packages from Visual Studio Online to MyGet"
date: 2015-09-01 07:29:00 +0200
comments: true
published: true
categories: ["post"]
tags: ["Feature", "Npm", "NuGet", "Vsix"]
alias: ["/post/2015/09/01/automatically-add-nuget-npm-and-vsix-packages-from-visual-studio-online-to-myget.aspx"]
author: "Maarten Balliauw"
redirect_from:
 - /post/2015/09/01/automatically-add-nuget-npm-and-vsix-packages-from-visual-studio-online-to-myget.aspx.html
 - /post/2015/09/01/automatically-add-nuget-npm-and-vsix-packages-from-visual-studio-online-to-myget.aspx.html
---

<p>For over a year now, <a href="/post/2014/05/12/Announcing-Visual-Studio-Online-integration.aspx">MyGet has had great Visual Studio Online (VSO) integration</a>. We support adding VSO git repositories into build services, running convention-based builds that convert freshly pushed source code into NuGet, npm or Vsix packages. With the Visual Studio 2015 release cycle, Microsoft released a <a href="https://www.visualstudio.com/en-us/get-started/build/build-your-app-vs">new build system</a> for Visual Studio Online. The artifacts generated from a build can be automatically added to a MyGet feed by adding a Visual Studio Online package source, both from classic XAML-based VSO builds as well as the new build system.</p> <p>From a MyGet feed, we can use the <em><strong>Package Sources | Add package source | Visual Studio Online build definition</strong></em> button to add a Visual Studio Online build definition. The first time we do this, we’ll have to grant access to our VSO instance.</p> <p align="center"><a href="/images/image_127.png"><img width="642" height="311" title="MyGet Visual Studio build artifact" style="border-top: 0px; border-right: 0px; background-image: none; border-bottom: 0px; padding-top: 0px; padding-left: 0px; border-left: 0px; display: inline; padding-right: 0px" alt="MyGet Visual Studio build artifact" src="/images/image_thumb_125.png" border="0"></a></p> <p>Once access is granted, MyGet will fetch a list of team projects and their builds. MyGet supports all sorts of build definitions, whether a classic XAML-based build or the new VSO “build vNext”. We can pick the team project we’re interested with, select the build definition, and depending on the VSO subscription we can also choose to post a message to a VSO team room whenever packages from a build are added to MyGet.</p> <p align="center"><a href="/images/image_128.png"><img width="642" height="597" title="Publish NuGet package from Visual Studio Online to MyGet" style="border-top: 0px; border-right: 0px; background-image: none; border-bottom: 0px; padding-top: 0px; padding-left: 0px; border-left: 0px; display: inline; padding-right: 0px" alt="Publish NuGet package from Visual Studio Online to MyGet" src="/images/image_thumb_126.png" border="0"></a></p> <p>Once we trigger a build in VSO, whether by checking in code or manually, MyGet will automatically add the generated artifacts to the current feed. Of course, we have to make sure our VSO build produces one or more .nupkg (NuGet), .tgz (npm) or .vsix (Vsix) artifacts (the <em>Publish Build Artifacts</em> build step will be needed for this). To run convention-based builds we can always use <a href="http://docs.myget.org/docs/reference/build-services">MyGet Build Services</a>, too.</p><p>We're looking forward to hearing your feedback through the comments below. Or tweet us via <a href="http://twitter.com/MyGetTeam" target="_blank">@MyGetTeam</a>.</p> <p><em>Happy packaging!</em></p>

